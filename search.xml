<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>esp32、esp8266接入小爱同学</title>
      <link href="/archives/55988.html"/>
      <url>/archives/55988.html</url>
      
        <content type="html"><![CDATA[<p>​</p><h2 id="项目说明："><a href="#项目说明：" class="headerlink" title="项目说明："></a><strong>项目说明：</strong></h2><p>首先你需要一台电脑、一块esp32或esp8266开发板。通过手机上的小爱同学进行语音控制开发板上的板载灯，实现一个基础的语音控制。由于小爱同学不能直接对开发板进行控制所以在这里我使用点灯平台进行间接控制。</p><p><img src="https://img-blog.csdnimg.cn/direct/80a1141e3d54429e8db388ee411987fb.jpeg"></p><p><img src="https://img-blog.csdnimg.cn/direct/48d61471aef6481181cb7bc6e56eb7f1.jpeg"></p><h2 id="环境搭建："><a href="#环境搭建：" class="headerlink" title="环境搭建："></a><strong>环境搭建：</strong></h2><p>本项目使用Arduino IDE开发，具体环境搭建可自行百度。</p><p>小爱同学、米家app（非小米、红米手机也可直接找安装包下载）</p><p>点灯app</p><p>在点灯esp32官网上有Arduino IDE的安装包、esp32、esp8266的开发包、点灯库以及点灯app,同时本文也是对照电灯官网上的开发文档来写的。</p><p><strong>点灯官网</strong><a href="https://diandeng.tech/home" title="点灯科技 (diandeng.tech)">点灯科技 (diandeng.tech)</a></p><h2 id="软件设置"><a href="#软件设置" class="headerlink" title="软件设置"></a>软件设置</h2><p>在点灯app上添加独立设备</p><p><img src="https://img-blog.csdnimg.cn/direct/a52b49a2870848baada2d24775848b07.jpeg"></p><p>获取密钥</p><p><img src="https://img-blog.csdnimg.cn/direct/e1d135dd69e1479286bb9ddd4898786e.png"></p><p>添加按钮</p><p><img src="https://img-blog.csdnimg.cn/direct/30498b5a0dfe4cfcb06d3342527a0f8e.jpeg"></p><p>这里组件的数据键名与之后代码里组件的字符串一一对应</p><p>米家与点灯关联</p><p>点击米家-&gt;我的-&gt;连接其他平台-&gt;添加点灯科技</p><p>这样就可以使用小爱同学控制esp32了。</p><p><img src="https://img-blog.csdnimg.cn/direct/f421b7960c4a47ff87f4514bb2659d79.jpeg"></p><h2 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a><strong>代码部分</strong></h2><p>友情提示：乐鑫正在用esp32C2逐步替代esp8266，不建议大家继续使用esp8266进行产品开发。</p><p>blinker lib 0.3.9开始不再对esp8266做兼容性测试。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_WIFI</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_MIOT_LIGHT   <span class="comment">//根据您定义的设备品类选择不同的参数用于配置Blinker</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED_BUILTIN 2       <span class="comment">//板载灯引脚为GPIO2</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Blinker.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> auth[] = <span class="string">&quot;**********&quot;</span>;   <span class="comment">//点灯app中获取到的密钥</span></span><br><span class="line"><span class="type">char</span> ssid[] = <span class="string">&quot;eh&quot;</span>;             <span class="comment">//您的WiFi热点名称</span></span><br><span class="line"><span class="type">char</span> pswd[] = <span class="string">&quot;88888888&quot;</span>;       <span class="comment">//您的WiFi密码</span></span><br><span class="line"></span><br><span class="line"><span class="function">BlinkerButton <span class="title">Button1</span><span class="params">(<span class="string">&quot;btn-abc&quot;</span>)</span></span>;     <span class="comment">// 新建组件对象，这个组件是按钮</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 按下按键即会执行该函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">button1_callback</span><span class="params">(<span class="type">const</span> String &amp; state)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">BLINKER_LOG</span>(<span class="string">&quot;get button state: &quot;</span>, state);</span><br><span class="line">    <span class="built_in">digitalWrite</span>(LED_BUILTIN, !<span class="built_in">digitalRead</span>(LED_BUILTIN));<span class="comment">//对板载灯进行取反操作</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用户自定义电源类操作的回调函数:这里是当小爱同学向设备发起控制, 设备端需要有对应控制处理函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">miotPowerState</span><span class="params">(<span class="type">const</span> String &amp; state)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">BLINKER_LOG</span>(<span class="string">&quot;need set power state: &quot;</span>, state);<span class="comment">//调试信息</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (state == BLINKER_CMD_ON) &#123;</span><br><span class="line">        <span class="built_in">digitalWrite</span>(LED_BUILTIN, HIGH);<span class="comment">//点亮</span></span><br><span class="line"></span><br><span class="line">        BlinkerMIOT.<span class="built_in">powerState</span>(<span class="string">&quot;on&quot;</span>);</span><br><span class="line">        BlinkerMIOT.<span class="built_in">print</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (state == BLINKER_CMD_OFF) &#123;</span><br><span class="line">        <span class="built_in">digitalWrite</span>(LED_BUILTIN, LOW);<span class="comment">//熄灭</span></span><br><span class="line"></span><br><span class="line">        BlinkerMIOT.<span class="built_in">powerState</span>(<span class="string">&quot;off&quot;</span>);</span><br><span class="line">        BlinkerMIOT.<span class="built_in">print</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">9600</span>);</span><br><span class="line">  Serial.<span class="built_in">println</span>(<span class="string">&quot;hello&quot;</span>);<span class="comment">//串口</span></span><br><span class="line"></span><br><span class="line">  Blinker.<span class="built_in">begin</span>(auth, ssid, pswd); <span class="comment">//配置WiFi</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">pinMode</span>(LED_BUILTIN, OUTPUT);<span class="comment">//设置io口为输出模式</span></span><br><span class="line">  <span class="built_in">digitalWrite</span>(LED_BUILTIN, HIGH);<span class="comment">//默认点亮</span></span><br><span class="line"></span><br><span class="line">  Button<span class="number">1.</span><span class="built_in">attach</span>(button1_callback);<span class="comment">//注册按键回调函数</span></span><br><span class="line">  BlinkerMIOT.<span class="built_in">attachPowerState</span>(miotPowerState);<span class="comment">//注册回调函数，当有设备收到APP发来的数据时会调用对应的回调函数</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> Blinker.<span class="built_in">run</span>();<span class="comment">//运行点灯</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a><strong>结尾</strong></h2><p>可以看出点灯库的使用，首先新建组件，然后创建回调函数，所有操作都在回调函数当中实现，最后注册回调函数。</p><p>​</p>]]></content>
      
      
      
        <tags>
            
            <tag> esp32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/archives/16107.html"/>
      <url>/archives/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
